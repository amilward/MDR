<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>SpringSource Team Blog</title>
	<atom:link href="http://blog.springsource.org/feed/" rel="self" type="application/rss+xml" />
	<link>http://blog.springsource.org</link>
	<description>The voice of SpringSource</description>
	<lastBuildDate>Fri, 05 Jul 2013 15:09:19 +0000</lastBuildDate>
	<language>en</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>http://wordpress.org/?v=3.1.1</generator>
		<item>
		<title>Spring Security Java Config Preview: OAuth</title>
		<link>http://blog.springsource.org/2013/07/05/spring-security-java-config-preview-oauth/</link>
		<comments>http://blog.springsource.org/2013/07/05/spring-security-java-config-preview-oauth/#comments</comments>
		<pubDate>Fri, 05 Jul 2013 13:13:04 +0000</pubDate>
		<dc:creator>Rob Winch</dc:creator>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[Spring]]></category>

		<guid isPermaLink="false">http://blog.springsource.org/?p=13856</guid>
		<description><![CDATA[This is the last post in my four part blog series that introduces Spring Security Java configuration. In this post, we will discuss how Spring Security Java configuration can be extended by walking through Spring Security OAuth Java configuration support. Proof of Concept While the Spring Security Java configuration works well for very basic configuration,  <a href="http://blog.springsource.org/2013/07/05/spring-security-java-config-preview-oauth/"><em>Read more...</em></a>]]></description>
		<wfw:commentRss>http://blog.springsource.org/2013/07/05/spring-security-java-config-preview-oauth/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Spring Security Java Config Preview: Method Security</title>
		<link>http://blog.springsource.org/2013/07/04/spring-security-java-config-preview-method-security/</link>
		<comments>http://blog.springsource.org/2013/07/04/spring-security-java-config-preview-method-security/#comments</comments>
		<pubDate>Thu, 04 Jul 2013 08:00:22 +0000</pubDate>
		<dc:creator>Rob Winch</dc:creator>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[Spring]]></category>

		<guid isPermaLink="false">http://blog.springsource.org/?p=13848</guid>
		<description><![CDATA[This is the third installment of a four part blog series. In my first post, I introduced Spring Security Java configuration and discussed some of the logistics of the project. In my previous post, we walked through a few examples of configuring web based security. In this post, I will discuss how to configure method  <a href="http://blog.springsource.org/2013/07/04/spring-security-java-config-preview-method-security/"><em>Read more...</em></a>]]></description>
		<wfw:commentRss>http://blog.springsource.org/2013/07/04/spring-security-java-config-preview-method-security/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Spring Security Java Config Preview: Web Security</title>
		<link>http://blog.springsource.org/2013/07/03/spring-security-java-config-preview-web-security/</link>
		<comments>http://blog.springsource.org/2013/07/03/spring-security-java-config-preview-web-security/#comments</comments>
		<pubDate>Wed, 03 Jul 2013 15:01:43 +0000</pubDate>
		<dc:creator>Rob Winch</dc:creator>
				<category><![CDATA[Spring]]></category>

		<guid isPermaLink="false">http://blog.springsource.org/?p=13769</guid>
		<description><![CDATA[In my previous post, I introduced Spring Security Java configuration and discussed some of the logistics of the project. In this post, we will start off by walking through a very simple web security configuration. We will then spice things up a bit with configuration that has been customized some. Hello Web Security In this  <a href="http://blog.springsource.org/2013/07/03/spring-security-java-config-preview-web-security/"><em>Read more...</em></a>]]></description>
		<wfw:commentRss>http://blog.springsource.org/2013/07/03/spring-security-java-config-preview-web-security/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
		</item>
		<item>
		<title>Spring Security Java Config Preview: Introduction</title>
		<link>http://blog.springsource.org/2013/07/02/spring-security-java-config-preview-introduction/</link>
		<comments>http://blog.springsource.org/2013/07/02/spring-security-java-config-preview-introduction/#comments</comments>
		<pubDate>Tue, 02 Jul 2013 22:38:45 +0000</pubDate>
		<dc:creator>Rob Winch</dc:creator>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[Spring]]></category>

		<guid isPermaLink="false">http://blog.springsource.org/?p=13625</guid>
		<description><![CDATA[Yesterday I announced the release of Spring Security Java Configuration support and the release of Spring Security 3.2.0.M2 which contains Java Configuration support. Spring Security&#039;s Java Configuration support is intended to provide a complete replacement of the XML namespace configuration. It is also designed to be extensible, so that Spring Security&#039;s extension projects can work  <a href="http://blog.springsource.org/2013/07/02/spring-security-java-config-preview-introduction/"><em>Read more...</em></a>]]></description>
		<wfw:commentRss>http://blog.springsource.org/2013/07/02/spring-security-java-config-preview-introduction/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>
		</item>
		<item>
		<title>Spring XD 1.0 Milestone 1 Released</title>
		<link>http://blog.springsource.org/2013/06/12/spring-xd-1-0-milestone-1-released/</link>
		<comments>http://blog.springsource.org/2013/06/12/spring-xd-1-0-milestone-1-released/#comments</comments>
		<pubDate>Wed, 12 Jun 2013 14:36:25 +0000</pubDate>
		<dc:creator>Mark Pollack</dc:creator>
				<category><![CDATA[Big Data]]></category>
		<category><![CDATA[Enterprise Integration]]></category>
		<category><![CDATA[Hadoop]]></category>
		<category><![CDATA[Open Source]]></category>
		<category><![CDATA[Spring]]></category>
		<category><![CDATA[Spring Batch]]></category>
		<category><![CDATA[Spring Data]]></category>
		<category><![CDATA[Spring Integration]]></category>

		<guid isPermaLink="false">http://blog.springsource.org/?p=13524</guid>
		<description><![CDATA[Today we are pleased to announce the 1.0 M1 release of Spring XD  (download).Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export.  The project’s goal is to simplify the development of big data applications. From the 10,000 foot view, big data applications share many  <a href="http://blog.springsource.org/2013/06/12/spring-xd-1-0-milestone-1-released/"><em>Read more...</em></a>]]></description>
		<wfw:commentRss>http://blog.springsource.org/2013/06/12/spring-xd-1-0-milestone-1-released/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>
		</item>
		<item>
		<title>First milestone of Spring Data release train Babbage arrived</title>
		<link>http://blog.springsource.org/2013/06/10/first-milestone-of-spring-data-release-train-babbage-arrived/</link>
		<comments>http://blog.springsource.org/2013/06/10/first-milestone-of-spring-data-release-train-babbage-arrived/#comments</comments>
		<pubDate>Mon, 10 Jun 2013 08:53:20 +0000</pubDate>
		<dc:creator>Oliver Gierke</dc:creator>
				<category><![CDATA[Spring]]></category>
		<category><![CDATA[REST MVC]]></category>
		<category><![CDATA[Spring Data]]></category>

		<guid isPermaLink="false">http://blog.springsource.org/?p=13514</guid>
		<description><![CDATA[I am pleased to announce the first service milestone release for the Spring Data release train named Babbage. It includes the following modules: Spring Data Commons 1.6 M1 &#8211; Changelog Spring Data JPA 1.4 M1 &#8211; Changelog Spring Data MongoDB 1.3 M1 &#8211; Changelog Spring Data Neo4j 2.3 M1 &#8211; Changelog The first milestone includes  <a href="http://blog.springsource.org/2013/06/10/first-milestone-of-spring-data-release-train-babbage-arrived/"><em>Read more...</em></a>]]></description>
		<wfw:commentRss>http://blog.springsource.org/2013/06/10/first-milestone-of-spring-data-release-train-babbage-arrived/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>
		</item>
		<item>
		<title>Content Negotiation using Views</title>
		<link>http://blog.springsource.org/2013/06/03/content-negotiation-using-views/</link>
		<comments>http://blog.springsource.org/2013/06/03/content-negotiation-using-views/#comments</comments>
		<pubDate>Mon, 03 Jun 2013 18:26:03 +0000</pubDate>
		<dc:creator>Paul Chapman</dc:creator>
				<category><![CDATA[3.0]]></category>
		<category><![CDATA[3.1]]></category>
		<category><![CDATA[Spring]]></category>
		<category><![CDATA[Web]]></category>

		<guid isPermaLink="false">http://blog.springsource.org/?p=13104</guid>
		<description><![CDATA[In my previous post I introduced the concept of content negotiation and the three strategies Spring MVC uses to determine the content requested. In this post I want to extend the concept to supporting multiple views for different content-types using the ContentNegotiatingViewResolver (or CNVR). Quick Overview Since we already know how to setup content-negotiation from  <a href="http://blog.springsource.org/2013/06/03/content-negotiation-using-views/"><em>Read more...</em></a>]]></description>
		<wfw:commentRss>http://blog.springsource.org/2013/06/03/content-negotiation-using-views/feed/</wfw:commentRss>
		<slash:comments>10</slash:comments>
		</item>
		<item>
		<title>Spring Framework 4.0 M1: WebSocket Support</title>
		<link>http://blog.springsource.org/2013/05/22/spring-framework-4-0-m1-websocket-support/</link>
		<comments>http://blog.springsource.org/2013/05/22/spring-framework-4-0-m1-websocket-support/#comments</comments>
		<pubDate>Thu, 23 May 2013 02:38:33 +0000</pubDate>
		<dc:creator>Rossen Stoyanchev</dc:creator>
				<category><![CDATA[Spring]]></category>
		<category><![CDATA[Web]]></category>

		<guid isPermaLink="false">http://blog.springsource.org/?p=13431</guid>
		<description><![CDATA[As you may have seen, the first milestone of Spring Framework 4.0 was already announced and with it we&#039;ve released early WebSocket support. Why WebSocket matters? It enables efficient, two-way communication over the web that is essential in applications where messages need to be exchanged between client (typically browser) and server at high frequency and  <a href="http://blog.springsource.org/2013/05/22/spring-framework-4-0-m1-websocket-support/"><em>Read more...</em></a>]]></description>
		<wfw:commentRss>http://blog.springsource.org/2013/05/22/spring-framework-4-0-m1-websocket-support/feed/</wfw:commentRss>
		<slash:comments>26</slash:comments>
		</item>
		<item>
		<title>Spring Framework 4.0 M1 &amp; 3.2.3 available</title>
		<link>http://blog.springsource.org/2013/05/21/spring-framework-4-0-m1-3-2-3-available/</link>
		<comments>http://blog.springsource.org/2013/05/21/spring-framework-4-0-m1-3-2-3-available/#comments</comments>
		<pubDate>Tue, 21 May 2013 15:15:54 +0000</pubDate>
		<dc:creator>Juergen Hoeller</dc:creator>
				<category><![CDATA[Java]]></category>
		<category><![CDATA[Spring]]></category>

		<guid isPermaLink="false">http://blog.springsource.org/?p=13378</guid>
		<description><![CDATA[Dear Spring community, It&#039;s my pleasure to announce the first milestone towards Spring Framework 4.0, delivering a first cut of our work on several key themes: the first wave of Java SE 8 / OpenJDK 8 support (some details following below) initial support for JMS 2.0, JPA 2.1, Bean Validation 1.1, and JSR-236 concurrency (from  <a href="http://blog.springsource.org/2013/05/21/spring-framework-4-0-m1-3-2-3-available/"><em>Read more...</em></a>]]></description>
		<wfw:commentRss>http://blog.springsource.org/2013/05/21/spring-framework-4-0-m1-3-2-3-available/feed/</wfw:commentRss>
		<slash:comments>16</slash:comments>
		</item>
		<item>
		<title>Reactor &#8211; a foundation for asynchronous applications on the JVM</title>
		<link>http://blog.springsource.org/2013/05/13/reactor-a-foundation-for-asynchronous-applications-on-the-jvm/</link>
		<comments>http://blog.springsource.org/2013/05/13/reactor-a-foundation-for-asynchronous-applications-on-the-jvm/#comments</comments>
		<pubDate>Mon, 13 May 2013 16:47:53 +0000</pubDate>
		<dc:creator>jbrisbin</dc:creator>
				<category><![CDATA[Big Data]]></category>
		<category><![CDATA[Cloud Computing]]></category>
		<category><![CDATA[Enterprise Integration]]></category>
		<category><![CDATA[Groovy/Grails]]></category>
		<category><![CDATA[Java]]></category>
		<category><![CDATA[Spring]]></category>

		<guid isPermaLink="false">http://blog.springsource.org/?p=13321</guid>
		<description><![CDATA[We’re pleased to announce that, after a long period of internal incubation, we’re releasing a foundational framework for asynchronous applications on the JVM which we’re calling Reactor. It provides abstractions for Java, Groovy and other JVM languages to make building event and data-driven applications easier. It’s also really fast. On modest hardware, it&#039;s possible to  <a href="http://blog.springsource.org/2013/05/13/reactor-a-foundation-for-asynchronous-applications-on-the-jvm/"><em>Read more...</em></a>]]></description>
		<wfw:commentRss>http://blog.springsource.org/2013/05/13/reactor-a-foundation-for-asynchronous-applications-on-the-jvm/feed/</wfw:commentRss>
		<slash:comments>38</slash:comments>
		</item>
	</channel>
</rss>
